/*
	ODBO provider for XMLA data stores
    Copyright (C) 2014  Yalos Software Labs
	http://www.arquery.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

	@description
					a tabular rowset generated by a MDX query (drillthrough)
*/

#pragma once

#include "resource.h"
#include "XMLAProvider_i.h"
#include "row_data.h"
#include "command.h"

using namespace ATL;

class tabular_row_data
{
private:
	int size;
	wchar_t* data;

	void copy_other( const tabular_row_data& other )
	{
		size = other.size;
		if ( 0 == size ) 
		{
			data = nullptr;
			return;
		}
		data = new wchar_t[size];
		CopyMemory( data, other.data, size );
	}
public:
	static ATLCOLUMNINFO* GetColumnInfo(void* pThis, DBORDINAL* pcCols);

	tabular_row_data()
	{
		size = 0;
		data = nullptr;
	}

	tabular_row_data( unsigned int size ) : size(size)
	{
		data = new wchar_t[size];
		ZeroMemory( data, size*sizeof(wchar_t) );
	}

	tabular_row_data( const tabular_row_data& other )
	{
		copy_other( other );
	}

	tabular_row_data& operator=( const tabular_row_data& other )
	{
		if ( &other == this ) { return *this; }
		if ( nullptr != data ) { delete[] data; }
		copy_other( other );
		return *this;
	}

	~tabular_row_data()
	{
		if ( nullptr != data ) { delete[] data; }
	}

	tabular_row_data* operator&()
	{
		return (tabular_row_data*)data;
	}
};


class tabular_rowset:  public CRowsetImpl< tabular_rowset, tabular_row_data, command>
{
	friend class tabular_row_data;
	connection_handler* mConnectionHandler;
public:
	HRESULT Execute(DBPARAMS * /*pParams*/, DBROWCOUNT* pcRowsAffected);
};